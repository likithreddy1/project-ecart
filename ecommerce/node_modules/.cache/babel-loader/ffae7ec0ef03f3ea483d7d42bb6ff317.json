{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Likith Reddy\\\\Desktop\\\\project1\\\\ecommerce\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Signup from \"../home/Signup\";\nimport Navbar from \"../home/Navbar\";\nimport React, { useState, useEffect } from \"react\";\nimport theme from \"../home/theme\";\nimport Home from \"../home/Home\";\nimport { Grid } from \"@material-ui/core\";\nimport Login from \"../home/Login\";\nimport Products from \"./products/products\";\nimport Navbar1 from \"./Navbar/Navbarlocal\";\nimport { commerce } from \"../lib/commerce\";\nimport Cart from \"./Cart/Cart\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Checkout from \"./CheckoutForm/Checkout/Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [log, setlog] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [cart, setcart] = useState({}); //handles logs\n\n  function hangleLog() {\n    setlog(prev => !prev);\n  }\n\n  const product = []; //fetch data\n\n  const fetchdata = async () => {\n    const {\n      data\n    } = await commerce.products.list();\n    setProducts(data);\n  }; //fetch cart\n\n\n  const fetchCart = async () => {\n    setcart(await commerce.cart.retrieve());\n  }; //useEffect for fetching data\n\n\n  useEffect(() => {\n    fetchdata();\n    fetchCart();\n  }, []); //handlecart\n\n  const handleCart = async (productid, quantity) => {\n    const item = await commerce.cart.add(productid, quantity);\n    setcart(item.line_items);\n  }; //update cart quantity\n\n\n  const handlequantity = async (productid, quantity) => {\n    const response = await commerce.cart.update(productid, {\n      quantity\n    });\n    setcart(response.cart);\n  }; //remove from cart\n\n\n  const removecart = async productid => {\n    const response = await commerce.cart.remove(productid);\n    setcart(response.cart);\n  }; // empty your cart\n\n\n  const emptycart = async () => {\n    const response = await commerce.cart.empty();\n    setcart(response.cart);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar1, {\n        totalitems: cart.total_items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/checkout\",\n          element: /*#__PURE__*/_jsxDEV(Checkout, {\n            cart: /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"A0AIxEX3pXB3GqyT8PoehZbc1xU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Likith Reddy/Desktop/project1/ecommerce/src/components/App.js"],"names":["Signup","Navbar","React","useState","useEffect","theme","Home","Grid","Login","Products","Navbar1","commerce","Cart","BrowserRouter","Routes","Route","Checkout","App","log","setlog","products","setProducts","cart","setcart","hangleLog","prev","product","fetchdata","data","list","fetchCart","retrieve","handleCart","productid","quantity","item","add","line_items","handlequantity","response","update","removecart","remove","emptycart","empty","total_items"],"mappings":"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","sourcesContent":["import Signup from \"../home/Signup\";\r\nimport Navbar from \"../home/Navbar\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport theme from \"../home/theme\";\r\nimport Home from \"../home/Home\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Login from \"../home/Login\";\r\nimport Products from \"./products/products\";\r\nimport Navbar1 from \"./Navbar/Navbarlocal\";\r\nimport { commerce } from \"../lib/commerce\";\r\nimport Cart from \"./Cart/Cart\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Checkout from \"./CheckoutForm/Checkout/Checkout\";\r\nexport default function App() {\r\n  const [log, setlog] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [cart, setcart] = useState({});\r\n  //handles logs\r\n  function hangleLog() {\r\n    setlog((prev) => !prev);\r\n  }\r\n  const product = [];\r\n  //fetch data\r\n  const fetchdata = async () => {\r\n    const { data } = await commerce.products.list();\r\n    setProducts(data);\r\n  };\r\n\r\n  //fetch cart\r\n  const fetchCart = async () => {\r\n    setcart(await commerce.cart.retrieve());\r\n  };\r\n\r\n  //useEffect for fetching data\r\n  useEffect(() => {\r\n    fetchdata();\r\n    fetchCart();\r\n  }, []);\r\n\r\n  //handlecart\r\n\r\n  const handleCart = async (productid, quantity) => {\r\n    const item = await commerce.cart.add(productid, quantity);\r\n    setcart(item.line_items);\r\n  };\r\n\r\n  //update cart quantity\r\n  const handlequantity = async (productid, quantity) => {\r\n    const response = await commerce.cart.update(productid, { quantity });\r\n    setcart(response.cart);\r\n  };\r\n\r\n  //remove from cart\r\n  const removecart = async (productid) => {\r\n    const response = await commerce.cart.remove(productid);\r\n    setcart(response.cart);\r\n  };\r\n\r\n  // empty your cart\r\n\r\n  const emptycart = async () => {\r\n    const response = await commerce.cart.empty();\r\n    setcart(response.cart);\r\n  };\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Navbar1 totalitems={cart.total_items} />\r\n        {/* <Products products={products} addToCart={handleCart} />\r\n    <Cart cart1={cart} handlequantity={handlequantity} removecart={removecart} emptycart={emptycart}/> */}\r\n        <Routes>\r\n          <Route path=\"/checkout\" element={<Checkout cart={<Cart />} />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n      {/* <Navbar changelog={hangleLog} />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Grid item sm={6}>\r\n            <Home />\r\n          </Grid>\r\n          <Grid item sm={6}>\r\n          {log?<Login/>:<Signup/>} \r\n          </Grid>\r\n        </Grid> */}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}