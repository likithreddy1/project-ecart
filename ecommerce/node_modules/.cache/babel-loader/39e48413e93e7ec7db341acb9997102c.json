{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Likith Reddy\\\\Desktop\\\\project1\\\\ecommerce\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Signup from \"./Signup\";\nimport Navbar from \"./Navbar\";\nimport React, { useState, useEffect } from \"react\";\nimport theme from \"./theme\";\nimport Home from \"../Home\";\nimport { Grid } from \"@material-ui/core\";\nimport Login from \"./Login\";\nimport Products from \"./products/products\";\nimport Navbar1 from \"./Navbar/Navbarlocal\";\nimport { commerce } from \"../lib/commerce\";\nimport Cart from \"./Cart/Cart\";\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [log, setlog] = useState(false);\n  const [products, setProducts] = useState([]);\n  const [cart, setcart] = useState({}); //handles logs\n\n  function hangleLog() {\n    setlog(prev => !prev);\n  }\n\n  const product = []; //fetch data\n\n  const fetchdata = async () => {\n    const {\n      data\n    } = await commerce.products.list();\n    setProducts(data);\n  }; //fetch cart\n\n\n  const fetchCart = async () => {\n    setcart(await commerce.cart.retrieve());\n  }; //useEffect for fetching data\n\n\n  useEffect(() => {\n    fetchdata();\n    fetchCart();\n  }, []); //handlecart\n\n  const handleCart = async (productid, quantity) => {\n    const item = await commerce.cart.add(productid, quantity);\n    setcart(item.line_items);\n  }; //handle update cart quantity\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar1, {\n      totalitems: cart.total_items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {\n      cart1: cart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"A0AIxEX3pXB3GqyT8PoehZbc1xU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Likith Reddy/Desktop/project1/ecommerce/src/components/App.js"],"names":["Signup","Navbar","React","useState","useEffect","theme","Home","Grid","Login","Products","Navbar1","commerce","Cart","BrowserRouter","Routes","Route","App","log","setlog","products","setProducts","cart","setcart","hangleLog","prev","product","fetchdata","data","list","fetchCart","retrieve","handleCart","productid","quantity","item","add","line_items","total_items"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,aAAR,EAAsBC,MAAtB,EAA6BC,KAA7B,QAAyC,kBAAzC;;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBf,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC,CAH4B,CAI5B;;AACA,WAASoB,SAAT,GAAqB;AACnBL,IAAAA,MAAM,CAAEM,IAAD,IAAU,CAACA,IAAZ,CAAN;AACD;;AACD,QAAMC,OAAO,GAAG,EAAhB,CAR4B,CAS5B;;AACA,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMhB,QAAQ,CAACQ,QAAT,CAAkBS,IAAlB,EAAvB;AACAR,IAAAA,WAAW,CAACO,IAAD,CAAX;AACD,GAHD,CAV4B,CAe5B;;;AACA,QAAME,SAAS,GAAG,YAAY;AAC5BP,IAAAA,OAAO,CAAC,MAAMX,QAAQ,CAACU,IAAT,CAAcS,QAAd,EAAP,CAAP;AACD,GAFD,CAhB4B,CAoB5B;;;AACA1B,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,SAAS;AACTG,IAAAA,SAAS;AACV,GAHQ,EAGP,EAHO,CAAT,CArB4B,CA0B5B;;AAEA,QAAME,UAAU,GAAG,OAAOC,SAAP,EAAkBC,QAAlB,KAA+B;AAChD,UAAMC,IAAI,GAAG,MAAMvB,QAAQ,CAACU,IAAT,CAAcc,GAAd,CAAkBH,SAAlB,EAA6BC,QAA7B,CAAnB;AACAX,IAAAA,OAAO,CAACY,IAAI,CAACE,UAAN,CAAP;AACD,GAHD,CA5B4B,CAiC5B;;;AACA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,UAAU,EAAEf,IAAI,CAACgB;AAA1B;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEhB;AAAb;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAoBD;;GAtDuBL,G;;KAAAA,G","sourcesContent":["import Signup from \"./Signup\";\r\nimport Navbar from \"./Navbar\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport theme from \"./theme\";\r\nimport Home from \"../Home\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Login from \"./Login\";\r\nimport Products from \"./products/products\";\r\nimport Navbar1 from \"./Navbar/Navbarlocal\";\r\nimport { commerce } from \"../lib/commerce\";\r\nimport Cart from \"./Cart/Cart\";\r\nimport{ BrowserRouter,Routes,Route} from 'react-router-dom'\r\nexport default function App() {\r\n  const [log, setlog] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [cart, setcart] = useState({});\r\n  //handles logs\r\n  function hangleLog() {\r\n    setlog((prev) => !prev);\r\n  }\r\n  const product = [];\r\n  //fetch data\r\n  const fetchdata = async () => {\r\n    const { data } = await commerce.products.list();\r\n    setProducts(data);\r\n  };\r\n\r\n  //fetch cart\r\n  const fetchCart = async () => {\r\n    setcart(await commerce.cart.retrieve());\r\n  };\r\n\r\n  //useEffect for fetching data\r\n  useEffect(() => {\r\n    fetchdata();\r\n    fetchCart();\r\n  },[]);\r\n\r\n  //handlecart\r\n\r\n  const handleCart = async (productid, quantity) => {\r\n    const item = await commerce.cart.add(productid, quantity);\r\n    setcart(item.line_items);\r\n  };\r\n\r\n  //handle update cart quantity\r\n  return (\r\n    <>\r\n      <Navbar1 totalitems={cart.total_items} />\r\n      {/* <Products products={products} addToCart={handleCart} /> */}\r\n      <Cart cart1={cart} />\r\n      {/* <Navbar changelog={hangleLog} />\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Grid item sm={6}>\r\n            <Home />\r\n          </Grid>\r\n          <Grid item sm={6}>\r\n          {log?<Login/>:<Signup/>} \r\n          </Grid>\r\n        </Grid> */}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}