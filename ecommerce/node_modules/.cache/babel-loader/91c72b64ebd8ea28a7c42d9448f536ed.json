{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Likith Reddy\\\\Desktop\\\\project1\\\\ecommerce\\\\src\\\\components\\\\CheckoutForm\\\\PaymentForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, Button, Divider } from \"@material-ui/core\";\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport Review from \"./Review\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\n\nfunction PaymentForm(props) {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (error) {\n      console.log(\"[error]\", error);\n    } else {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:4000/payment\", {\n          amount: \"1000\",\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n\n      const orderData = {\n        line_items: props.checkOutToken.live.line_items,\n        customer: {\n          firstname: props.shippingData.firstName,\n          lastname: props.shippingData.lastName,\n          email: props.shippingData.email\n        },\n        shipping: {\n          name: \"International\",\n          street: props.shippingData.address1,\n          town_city: props.shippingData.city,\n          county_state: props.shippingData.shippingSubdivision,\n          postal_zip_code: props.shippingData.zip,\n          country: props.shippingData.shippingCountry\n        },\n        fulfillment: {\n          shipping_method: props.shippingData.shippingOption\n        },\n        payment: {\n          gateway: \"stripe\",\n          stripe: {\n            payment_method_id: paymentMethod.id\n          }\n        }\n      };\n      props.handleCaptureCheckout(props.checkOutToken.id, orderData);\n      props.nextStep();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Review, {\n        token: props.checkOutToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        style: {\n          margin: \"20px 0\"\n        },\n        children: \"Payment Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: props.backStep,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: [\"Pay \", props.checkOutToken.live.subtotal.formatted_with_symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"you just bought a product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PaymentForm, \"6hDlQMsgCa6cRk+jdFUeEqLw/RU=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["C:/Users/Likith Reddy/Desktop/project1/ecommerce/src/components/CheckoutForm/PaymentForm.jsx"],"names":["React","useEffect","useState","Typography","Button","Divider","CardElement","useElements","useStripe","Review","axios","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","props","success","setSuccess","stripe","elements","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","console","log","id","response","post","amount","data","orderData","line_items","checkOutToken","live","customer","firstname","shippingData","firstName","lastname","lastName","email","shipping","name","street","address1","town_city","city","county_state","shippingSubdivision","postal_zip_code","zip","country","shippingCountry","fulfillment","shipping_method","shippingOption","payment","gateway","payment_method_id","handleCaptureCheckout","nextStep","margin","e","display","justifyContent","backStep","subtotal","formatted_with_symbol"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Typography, Button, Divider } from \"@material-ui/core\";\r\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport Review from \"./Review\";\r\nimport axios from \"axios\";\r\n\r\nconst CARD_OPTIONS = {\r\n  iconStyle: \"solid\",\r\n  style: {\r\n    base: {\r\n      iconColor: \"#c4f0ff\",\r\n      color: \"#fff\",\r\n      fontWeight: 500,\r\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n      fontSize: \"16px\",\r\n      fontSmoothing: \"antialiased\",\r\n      \":-webkit-autofill\": { color: \"#fce883\" },\r\n      \"::placeholder\": { color: \"#87bbfd\" },\r\n    },\r\n    invalid: {\r\n      iconColor: \"#ffc7ee\",\r\n      color: \"#ffc7ee\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction PaymentForm(props) {\r\n  const [success, setSuccess] = useState(false);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n    });\r\n    if (error) {\r\n      console.log(\"[error]\", error);\r\n    } else {\r\n      try {\r\n        const { id } = paymentMethod;\r\n        const response = await axios.post(\"http://localhost:4000/payment\", {\r\n          amount: \"1000\",\r\n          id,\r\n        });\r\n        if (response.data.success) {\r\n          console.log(\"successful payment\");\r\n          setSuccess(true);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      const orderData = {\r\n        line_items: props.checkOutToken.live.line_items,\r\n        customer: {\r\n          firstname: props.shippingData.firstName,\r\n          lastname: props.shippingData.lastName,\r\n          email: props.shippingData.email,\r\n        },\r\n        shipping: {\r\n          name: \"International\",\r\n          street: props.shippingData.address1,\r\n          town_city: props.shippingData.city,\r\n          county_state: props.shippingData.shippingSubdivision,\r\n          postal_zip_code: props.shippingData.zip,\r\n          country: props.shippingData.shippingCountry,\r\n        },\r\n        fulfillment: { shipping_method: props.shippingData.shippingOption },\r\n        payment: {\r\n          gateway: \"stripe\",\r\n          stripe: {\r\n            payment_method_id: paymentMethod.id,\r\n          },\r\n        },\r\n      };\r\n      props.handleCaptureCheckout(props.checkOutToken.id, orderData);\r\n      props.nextStep();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {!success ? (\r\n        <>\r\n          <Review token={props.checkOutToken} />\r\n          <Divider />\r\n          <Typography variant=\"h6\" gutterBottom style={{ margin: \"20px 0\" }}>\r\n            Payment Method\r\n          </Typography>\r\n          <form onSubmit={(e) => handleSubmit(e)}>\r\n            <CardElement/>\r\n            <br /> <br />\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <Button variant=\"outlined\" onClick={props.backStep}>\r\n                Back\r\n              </Button>\r\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Pay {props.checkOutToken.live.subtotal.formatted_with_symbol}\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <div>\r\n          <h2>you just bought a product</h2>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentForm;\r\n"]},"metadata":{},"sourceType":"module"}