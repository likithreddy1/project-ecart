{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Likith Reddy\\\\Desktop\\\\project1\\\\ecommerce\\\\src\\\\components\\\\CheckoutForm\\\\AddressForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Input, Select, MenuItem, Button, Grid, Typography, InputLabel } from \"@material-ui/core\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport FormInput from \"./CustomTextField\";\nimport { commerce } from '../../lib/commerce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AddressForm(_ref) {\n  _s();\n\n  let {\n    checkOutToken\n  } = _ref;\n  const methods = useForm();\n  const {\n    handleSubmit\n  } = useForm();\n  const [shippingCountries, setCountries] = useState([]);\n  const [shippingCountry, setCountry] = useState('');\n  const [shippingSubdivisions, setSubdivisions] = useState([]);\n  const [shippingSubdivision, setSubdivision] = useState('');\n  const [shippingOptions, setOptions] = useState([]);\n  const [shippingOption, setOption] = useState('');\n\n  const fetchShippingCountries = async checkoutTokenId => {\n    const {\n      countries\n    } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n    setCountries(countries);\n    setCountry(Object.keys(countries)[0]);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkOutToken.id);\n  }, []);\n  const countries = Object.entries(shippingCountries).map(_ref2 => {\n    let [code, label] = _ref2;\n    return {\n      id: code,\n      name: label\n    };\n  });\n  console.log(countries);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Shipping Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"ZIP/ Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingCountry,\n              fullWidth: true,\n              onChange: handleSubmit,\n              children: countries.map(item => {\n                /*#__PURE__*/\n                _jsxDEV(MenuItem, {\n                  value: item.id,\n                  children: item.label\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 17\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddressForm, \"t1AYxXeuJr5v5rFEP6NgKgygx6w=\", false, function () {\n  return [useForm, useForm];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["C:/Users/Likith Reddy/Desktop/project1/ecommerce/src/components/CheckoutForm/AddressForm.jsx"],"names":["React","useState","useEffect","Input","Select","MenuItem","Button","Grid","Typography","InputLabel","useForm","FormProvider","FormInput","commerce","AddressForm","checkOutToken","methods","handleSubmit","shippingCountries","setCountries","shippingCountry","setCountry","shippingSubdivisions","setSubdivisions","shippingSubdivision","setSubdivision","shippingOptions","setOptions","shippingOption","setOption","fetchShippingCountries","checkoutTokenId","countries","services","localeListShippingCountries","Object","keys","id","entries","map","code","label","name","console","log","item"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport {\r\n  Input,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport FormInput from \"./CustomTextField\";\r\nimport {commerce} from '../../lib/commerce'\r\nfunction AddressForm({checkOutToken}) {\r\n  const methods = useForm();\r\n  const {handleSubmit}=useForm();\r\n\r\n  const[shippingCountries,setCountries]=useState([])\r\n  const[shippingCountry,setCountry]=useState('')\r\n  const[shippingSubdivisions,setSubdivisions]=useState([])\r\n  const[shippingSubdivision,setSubdivision]=useState('')\r\n  const[shippingOptions,setOptions]=useState([])\r\n  const[shippingOption,setOption]=useState('')\r\n\r\n  const fetchShippingCountries=async(checkoutTokenId)=>{\r\n    const {countries} =await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n   setCountries(countries)\r\n  setCountry(Object.keys(countries)[0])\r\n  }\r\n  useEffect(()=>{\r\n    fetchShippingCountries(checkOutToken.id) \r\n  },[])\r\n\r\n  const countries=Object.entries(shippingCountries).map(([code,label])=>({id:code,name:label}))\r\n  console.log(countries)\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping Address\r\n      </Typography>\r\n      <FormProvider {...methods}>\r\n        <form   onSubmit={handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <FormInput required name='firstName' label='First Name'/>\r\n            <FormInput required name='firstName' label='Last Name'/>\r\n            <FormInput required name='firstName' label='Address'/>\r\n            <FormInput required name='firstName' label='Email'/>\r\n            <FormInput required name='firstName' label='City'/>\r\n            <FormInput required name='firstName' label='ZIP/ Postal code'/>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Address</InputLabel>\r\n              <Select value={shippingCountry} fullWidth onChange={handleSubmit}>\r\n              {countries.map(item=>{\r\n                <MenuItem key={item.id} value={item.id}>\r\n                  {item.label}\r\n                </MenuItem>\r\n              })}\r\n\r\n              </Select>\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select value={2} fullWidth onChange={handleSubmit}>\r\n                <MenuItem key={2} value={2}>\r\n                    Select me\r\n                </MenuItem>\r\n\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select value={2} fullWidth onChange={handleSubmit}>\r\n                <MenuItem key={2} value={2}>\r\n                    Select me\r\n                </MenuItem>\r\n\r\n              </Select>\r\n            </Grid> */}\r\n          </Grid>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddressForm;\r\n"]},"metadata":{},"sourceType":"module"}