{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Likith Reddy\\\\Desktop\\\\project1\\\\ecommerce\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Signup from \"../home/Signup\";\nimport Navbar from \"../home/Navbar\";\nimport React, { useState, useEffect } from \"react\";\nimport { CssBaseline } from '@material-ui/core';\nimport theme from \"../home/theme\";\nimport HomeApp from \"../home/HomeApp\";\nimport Home from \"../home/Home\";\nimport { Grid } from \"@material-ui/core\";\nimport Login from \"../home/Login\";\nimport Products from \"./products/products\";\nimport Navbar1 from \"./Navbar/Navbarlocal\";\nimport { commerce } from \"../lib/commerce\";\nimport Cart from \"./Cart/Cart\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Checkout from \"./CheckoutForm/Checkout/Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [cart, setcart] = useState({});\n  const [order, setOrder] = useState({});\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [user, setuser] = useState(true); //handles logs\n  //fetch data\n\n  const fetchdata = async () => {\n    const {\n      data\n    } = await commerce.products.list();\n    setProducts(data);\n  }; //fetch cart\n\n\n  const fetchCart = async () => {\n    setcart(await commerce.cart.retrieve());\n  }; //useEffect for fetching data\n\n\n  useEffect(() => {\n    fetchdata();\n    fetchCart();\n  }, []); //handlecart\n\n  const handleCart = async (productid, quantity) => {\n    const item = await commerce.cart.add(productid, quantity);\n    setcart(item.cart);\n  }; //update cart quantity\n\n\n  const handlequantity = async (productid, quantity) => {\n    const {\n      cart\n    } = await commerce.cart.update(productid, {\n      quantity\n    });\n    setcart(cart);\n  }; //remove from cart\n\n\n  const removecart = async productid => {\n    const response = await commerce.cart.remove(productid);\n    setcart(response.cart);\n  }; // empty your cart\n\n\n  const emptycart = async () => {\n    const response = await commerce.cart.empty();\n    setcart(response.cart);\n  }; //handleCaptureCheckout\n\n\n  const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n    setcart({});\n    refreshCart();\n  }; //refresh our cart\n\n\n  const refreshCart = async () => {\n    const newCart = await commerce.cart.refresh();\n    setcart(newCart);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user ? /*#__PURE__*/_jsxDEV(HomeApp, {\n      user: setuser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this) : /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar1, {\n        totalitems: cart.total_items,\n        user: setuser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Products, {\n            products: products,\n            addToCart: handleCart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart\",\n          element: /*#__PURE__*/_jsxDEV(Cart, {\n            cart1: cart,\n            handlequantity: handlequantity,\n            removecart: removecart,\n            emptycart: emptycart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/checkout\",\n          element: /*#__PURE__*/_jsxDEV(Checkout, {\n            cart: cart,\n            order: order,\n            handleCaptureCheckout: handleCaptureCheckout,\n            error: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 38\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"rNnzC0fPyl67z/biCBk9/doyer8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Likith Reddy/Desktop/project1/ecommerce/src/components/App.js"],"names":["Signup","Navbar","React","useState","useEffect","CssBaseline","theme","HomeApp","Home","Grid","Login","Products","Navbar1","commerce","Cart","BrowserRouter","Routes","Route","Checkout","App","products","setProducts","cart","setcart","order","setOrder","errorMessage","setErrorMessage","user","setuser","fetchdata","data","list","fetchCart","retrieve","handleCart","productid","quantity","item","add","handlequantity","update","removecart","response","remove","emptycart","empty","handleCaptureCheckout","checkoutTokenId","newOrder","refreshCart","newCart","refresh","total_items"],"mappings":"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","sourcesContent":["import Signup from \"../home/Signup\";\r\nimport Navbar from \"../home/Navbar\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport theme from \"../home/theme\";\r\nimport HomeApp from \"../home/HomeApp\";\r\nimport Home from \"../home/Home\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Login from \"../home/Login\";\r\nimport Products from \"./products/products\";\r\nimport Navbar1 from \"./Navbar/Navbarlocal\";\r\nimport { commerce } from \"../lib/commerce\";\r\nimport Cart from \"./Cart/Cart\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Checkout from \"./CheckoutForm/Checkout/Checkout\";\r\nexport default function App() {\r\n \r\n  const [products, setProducts] = useState([]);\r\n  const [cart, setcart] = useState({});\r\n  const [order, setOrder] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const[user,setuser]=useState(true)\r\n  //handles logs\r\n  //fetch data\r\n  const fetchdata = async () => {\r\n    const { data } = await commerce.products.list();\r\n    setProducts(data);\r\n  };\r\n  \r\n  //fetch cart\r\n  const fetchCart = async () => {\r\n    setcart(await commerce.cart.retrieve());\r\n  };\r\n\r\n  //useEffect for fetching data\r\n  useEffect(() => {\r\n    fetchdata();\r\n    fetchCart();\r\n  }, []);\r\n\r\n  //handlecart\r\n\r\n  const handleCart = async (productid, quantity) => {\r\n    const item = await commerce.cart.add(productid, quantity);\r\n    setcart(item.cart);\r\n  };\r\n\r\n  //update cart quantity\r\n  const handlequantity = async (productid, quantity) => {\r\n    const {cart} = await commerce.cart.update(productid, { quantity });\r\n    setcart(cart);\r\n  };\r\n\r\n  //remove from cart\r\n  const removecart = async (productid) => {\r\n    const response = await commerce.cart.remove(productid);\r\n    setcart(response.cart);\r\n  };\r\n\r\n  // empty your cart\r\n\r\n  const emptycart = async () => {\r\n    const response = await commerce.cart.empty();\r\n    setcart(response.cart);\r\n  };\r\n  //handleCaptureCheckout\r\n  const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\r\n    setcart({});\r\n    refreshCart()\r\n  };\r\n\r\n  //refresh our cart\r\n  const refreshCart = async () => {\r\n    const newCart = await commerce.cart.refresh();\r\n    setcart(newCart);\r\n  };\r\n  return (\r\n    <>\r\n    { user?<HomeApp user={setuser}/>:<BrowserRouter>\r\n      <Navbar1 totalitems={cart.total_items} user={setuser}/>\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={<Products products={products} addToCart={handleCart} />}\r\n          />\r\n          <Route\r\n            path=\"/cart\"\r\n            element={\r\n              <Cart\r\n                cart1={cart}\r\n                handlequantity={handlequantity}\r\n                removecart={removecart}\r\n                emptycart={emptycart}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/checkout\"\r\n            element={\r\n              <Checkout\r\n                cart={cart}\r\n                order={order}\r\n                handleCaptureCheckout={handleCaptureCheckout}\r\n                error={errorMessage} \r\n              />\r\n            }\r\n          />\r\n        </Routes>\r\n      </BrowserRouter>\r\n      }\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}